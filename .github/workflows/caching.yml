name: Test
on: push
jobs:
  #  local_gha_cache:
  #    name: type=local + gha cache
  #    runs-on: buildjet-2vcpu-ubuntu-2204
  #    steps:
  #      - name: Checkout
  #        uses: actions/checkout@v3
  #      - name: Login to Docker Hub
  #        uses: docker/login-action@v2
  #        with:
  #          username: ${{ secrets.DOCKERHUB_USERNAME }}
  #          password: ${{ secrets.DOCKERHUB_TOKEN }}
  #      - name: Set up Docker Buildx
  #        uses: docker/setup-buildx-action@v2
  #
  #      - name: Cache Docker Buildx layers
  #        uses: actions/cache@main
  #        with:
  #          path: /tmp/.buildx-cache
  #          # Key is named differently to avoid collision
  #          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
  #          restore-keys: |
  #            ${{ runner.os }}-buildx
  #
  #      - name: Build and push docker image
  #        uses: docker/build-push-action@v4
  #        with:
  #          context: .
  #          file: ./Dockerfile
  #          tags: ${{ secrets.DOCKERHUB_USERNAME }}/docker-node-cache-test
  #          cache-from: type=local,src=/tmp/.buildx-cache
  #          cache-to: type=local,dest=/tmp/.buildx-cache-new
  #
  #        # Temp fix
  #        # https://github.com/docker/build-push-action/issues/252
  #        # https://github.com/moby/buildkit/issues/1896
  #      - name: Move cache
  #        run: |
  #          rm -rf /tmp/.buildx-cache
  #          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  #  local_bj_cache:
  #    name: type=local + bj cache
  #    needs: local_gha_cache
  #    runs-on: buildjet-2vcpu-ubuntu-2204
  #    steps:
  #      - name: Checkout
  #        uses: actions/checkout@v3
  #      - name: Login to Docker Hub
  #        uses: docker/login-action@v2
  #        with:
  #          username: ${{ secrets.DOCKERHUB_USERNAME }}
  #          password: ${{ secrets.DOCKERHUB_TOKEN }}
  #      - name: Set up Docker Buildx
  #        uses: docker/setup-buildx-action@v2
  #
  #      - name: Cache Docker Buildx layers
  #        uses: buildjet/cache@main
  #        with:
  #          path: /tmp/.buildx-cache
  #          # Key is named differently to avoid collision
  #          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
  #          restore-keys: |
  #            ${{ runner.os }}-buildx
  #
  #      - name: Build and push docker image
  #        uses: docker/build-push-action@v4
  #        with:
  #          context: .
  #          file: ./Dockerfile
  #          tags: ${{ secrets.DOCKERHUB_USERNAME }}/docker-node-cache-test
  #          cache-from: type=local,src=/tmp/.buildx-cache
  #          cache-to: type=local,dest=/tmp/.buildx-cache-new
  #
  #        # Temp fix
  #        # https://github.com/docker/build-push-action/issues/252
  #        # https://github.com/moby/buildkit/issues/1896
  #      - name: Move cache
  #        run: |
  #          rm -rf /tmp/.buildx-cache
  #          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  #
  #  gha_cache:
  #    name: type=gha
  #    needs: local_bj_cache
  #    runs-on: buildjet-2vcpu-ubuntu-2204
  #    steps:
  #      - name: Checkout
  #        uses: actions/checkout@v3
  #      - name: Login to Docker Hub
  #        uses: docker/login-action@v2
  #        with:
  #          username: ${{ secrets.DOCKERHUB_USERNAME }}
  #          password: ${{ secrets.DOCKERHUB_TOKEN }}
  #      - name: Set up Docker Buildx
  #        uses: docker/setup-buildx-action@v2
  #
  #      - name: Cache Docker Buildx layers
  #        uses: buildjet/cache@main
  #        with:
  #          path: /tmp/.buildx-cache
  #          # Key is named differently to avoid collision
  #          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
  #          restore-keys: |
  #            ${{ runner.os }}-buildx
  #
  #      - name: Build and push docker image
  #        uses: docker/build-push-action@v4
  #        with:
  #          context: .
  #          file: ./Dockerfile
  #          tags: ${{ secrets.DOCKERHUB_USERNAME }}/docker-node-cache-test
  #          cache-from: type=gha
  #          cache-to: type=gha,mode=max
  inline_cache_hub:
    name: type=inline hub
    runs-on: buildjet-2vcpu-ubuntu-2204
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/docker-node-cache-test:inline
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/docker-node-cache-test:inline
          cache-to: type=inline
  inline_cache_ghcr:
    name: type=inline ghcr
    runs-on: buildjet-2vcpu-ubuntu-2204
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/docker-node-cache-test:inline
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/docker-node-cache-test:inline
          cache-to: type=inline
  registry_cache_hub:
    name: type=registry hub
    runs-on: buildjet-2vcpu-ubuntu-2204
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker Buildx layers
        uses: buildjet/cache@main
        with:
          path: /tmp/.buildx-cache
          # Key is named differently to avoid collision
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-buildx

      - name: Build and push docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          file: ./Dockerfile
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/docker-node-cache-test
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/docker-node-cache-test
          cache-to: type=registry,${{ secrets.DOCKERHUB_USERNAME }}/docker-node-cache-test,mode=max

#  gh_cache_on_github:
#    name: GitHub Cache on GitHub runner
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: Cache download
#        id: cache-download-restore
#        uses: actions/cache@v3
#        with:
#          path: /home/runner/debian
#          key: ${{ runner.os }}-dl-gh_cache_on_github
#
#      - name: Download file
#        if: steps.cache-download-restore.outputs.cache-hit != 'true'
#        run: |
#          mkdir -p /home/runner/debian
#          curl https://downloads.raspberrypi.org/raspios_full_armhf/images/raspios_full_armhf-2023-05-03/2023-05-03-raspios-bullseye-armhf-full.img.xz -o /home/runner/debian/raspian1.img.xz && ls -la /home/runner/debian
#
#  gh_cache_on_buildjet:
#    name: GitHub Cache on BuildJet runner
#    runs-on: buildjet-2vcpu-ubuntu-2204
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: Cache download
#        id: cache-download-restore
#        uses: actions/cache@v3
#        with:
#          path: /home/runner/debian
#          key: ${{ runner.os }}-dl-gh_cache_on_buildjet
#
#      - name: Download file
#        if: steps.cache-download-restore.outputs.cache-hit != 'true'
#        run: |
#          mkdir -p /home/runner/debian
#          curl https://downloads.raspberrypi.org/raspios_full_armhf/images/raspios_full_armhf-2023-05-03/2023-05-03-raspios-bullseye-armhf-full.img.xz -o /home/runner/debian/raspian1.img.xz && ls -la /home/runner/debian
#
#  gh_cache_on_self_hosted:
#    name: GitHub Cache on Self Hosted runner (SFO3)
#    runs-on: sfo3
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: Cache download
#        id: cache-download-restore
#        uses: actions/cache@v3
#        with:
#          path: /home/runner/debian
#          key: ${{ runner.os }}-dl-gh_cache_on_self_hosted
#
#      - name: Download file
#        if: steps.cache-download-restore.outputs.cache-hit != 'true'
#        run: |
#          mkdir -p /home/runner/debian
#          curl https://downloads.raspberrypi.org/raspios_full_armhf/images/raspios_full_armhf-2023-05-03/2023-05-03-raspios-bullseye-armhf-full.img.xz -o /home/runner/debian/raspian1.img.xz && ls -la /home/runner/debian
#
#  buildjet_cache_on_self_hosted:
#    name: BuildJet Cache on Self Hosted runner (SFO3)
#    runs-on: sfo3
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: Cache download
#        id: cache-download-restore
#        uses: buildjet/cache@v3
#        with:
#          path: /home/runner/debian
#          key: ${{ runner.os }}-dl-buildjet_cache_on_self_hosted
#
#      - name: Download file
#        if: steps.cache-download-restore.outputs.cache-hit != 'true'
#        run: |
#          mkdir -p /home/runner/debian
#          curl https://downloads.raspberrypi.org/raspios_full_armhf/images/raspios_full_armhf-2023-05-03/2023-05-03-raspios-bullseye-armhf-full.img.xz -o /home/runner/debian/raspian1.img.xz && ls -la /home/runner/debian
#
#  buildjet_cache_on_github:
#    name: BuildJet Cache on GitHub runner
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: Cache download
#        id: cache-download-restore
#        uses: buildjet/cache@v3
#        with:
#          path: /home/runner/debian
#          key: ${{ runner.os }}-dl-buildjet_cache_on_github
#
#      - name: Download file
#        if: steps.cache-download-restore.outputs.cache-hit != 'true'
#        run: |
#          mkdir -p /home/runner/debian
#          curl https://downloads.raspberrypi.org/raspios_full_armhf/images/raspios_full_armhf-2023-05-03/2023-05-03-raspios-bullseye-armhf-full.img.xz -o /home/runner/debian/raspian1.img.xz && ls -la /home/runner/debian
#
#  buildjet_cache_on_buildjet:
#    name: BuildJet Cache on BuildJet runner
#    runs-on: buildjet-2vcpu-ubuntu-2204
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: Cache download
#        id: cache-download-restore
#        uses: buildjet/cache@v3
#        with:
#          path: /home/runner/debian
#          key: ${{ runner.os }}-dl-buildjet_cache_on_buildjet
#
#      - name: Download file
#        if: steps.cache-download-restore.outputs.cache-hit != 'true'
#        run: |
#          mkdir -p /home/runner/debian
#          curl https://downloads.raspberrypi.org/raspios_full_armhf/images/raspios_full_armhf-2023-05-03/2023-05-03-raspios-bullseye-armhf-full.img.xz -o /home/runner/debian/raspian1.img.xz && ls -la /home/runner/debian
#
