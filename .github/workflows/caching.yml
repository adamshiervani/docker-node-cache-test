name: Test
on: push
env:
  REGISTRY: ghcr.io
jobs:
  inline_cache_hub:
    name: type=inline hub
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: true # In case one of the jobs fails, the other jobs will be cancelled
      matrix:
        runs-on: [ buildjet-2vcpu-ubuntu-2204, ubuntu-latest ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/docker-node-cache-test:inline-${{ matrix.runs-on }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/docker-node-cache-test:inline-${{ matrix.runs-on }}
          cache-to: type=inline

  inline_cache_ghcr:
    name: type=inline ghcr
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: true # In case one of the jobs fails, the other jobs will be cancelled
      matrix:
        runs-on: [ buildjet-2vcpu-ubuntu-2204, ubuntu-latest ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate image name
        run: |
          echo "IMAGE_NAME=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}

      - name: Build and push docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ghcr.io/adamshiervani/docker-node-cache-test:inline-${{matrix.runs-on}}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:inline-${{matrix.runs-on}}
          cache-to: type=inline

  registry_cache_ghcr:
    name: type=registry ghcr
    strategy:
      fail-fast: true # In case one of the jobs fails, the other jobs will be cancelled
      matrix:
        runs-on: [ buildjet-2vcpu-ubuntu-2204, ubuntu-latest ]
    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate image name
        run: |
          echo "IMAGE_NAME=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}

      - name: Build and push docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ghcr.io/adamshiervani/docker-node-cache-test:registry-${{matrix.runs-on}}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:registry-${{matrix.runs-on}}
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:registry-${{matrix.runs-on}},mode=max

  registry_cache_hub:
    name: type=registry hub
    strategy:
      fail-fast: true # In case one of the jobs fails, the other jobs will be cancelled
      matrix:
        runs-on: [ buildjet-2vcpu-ubuntu-2204, ubuntu-latest ]
    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/docker-node-cache-test:registry-${{ matrix.runs-on }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/docker-node-cache-test:registry-${{ matrix.runs-on }}
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/docker-node-cache-test:registry-${{ matrix.runs-on }},mode=max

  test_buildjet_cache:
    name: Test BuildJet Cache
    runs-on: buildjet-2vcpu-ubuntu-2204
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: buildjet/cache@v3
        with:
          path: |
            ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
