name: Test
on: push
jobs:
  #  with_local_cache:
  #    name: Docker with GitHub Cache on GitHub runner
  #    runs-on: ubuntu-latest
  #    steps:
  #      - name: Checkout
  #        uses: actions/checkout@v3
  #      - name: Login to Docker Hub
  #        uses: docker/login-action@v2
  #        with:
  #          username: ${{ secrets.DOCKERHUB_USERNAME }}
  #          password: ${{ secrets.DOCKERHUB_TOKEN }}
  #      - name: Set up Docker Buildx
  #        uses: docker/setup-buildx-action@v2
  #
  #      - name: Cache Docker Buildx layers
  #        uses: actions/cache@main
  #        with:
  #          path: /tmp/.buildx-cache
  #          # Key is named differently to avoid collision
  #          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
  #          restore-keys: |
  #            ${{ runner.os }}-buildx
  #        env:
  #          PARALLEL_DOWNLOAD: 'true'
  #
  #      - name: Build and push docker image
  #        uses: docker/build-push-action@v4
  #        with:
  #          context: .
  #          file: ./Dockerfile
  #          push: false
  #          tags: ${{ secrets.DOCKERHUB_USERNAME }}/docker-node-cache-test
  #          cache-from: type=local,src=/tmp/.buildx-cache
  #          cache-to: type=local,dest=/tmp/.buildx-cache-new
  #
  #        # Temp fix
  #        # https://github.com/docker/build-push-action/issues/252
  #        # https://github.com/moby/buildkit/issues/1896
  #      - name: Move cache
  #        run: |
  #          rm -rf /tmp/.buildx-cache
  #          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  #  with_new_local_cache_github:
  #    name: Docker with BuildJet Cache on GitHub runner
  #    runs-on: ubuntu-latest
  #    steps:
  #      - name: Checkout
  #        uses: actions/checkout@v3
  #      - name: Login to Docker Hub
  #        uses: docker/login-action@v2
  #        with:
  #          username: ${{ secrets.DOCKERHUB_USERNAME }}
  #          password: ${{ secrets.DOCKERHUB_TOKEN }}
  #      - name: Set up Docker Buildx
  #        uses: docker/setup-buildx-action@v2
  #
  #      - name: Cache Docker Buildx layers
  #        uses: buildjet/cache@main
  #        with:
  #          path: /tmp/.buildx-cache
  #          # Key is named differently to avoid collision
  #          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
  #          restore-keys: |
  #            ${{ runner.os }}-buildx
  #        env:
  #          PARALLEL_DOWNLOAD: 'true'
  #
  #      - name: Build and push docker image
  #        uses: docker/build-push-action@v4
  #        with:
  #          context: .
  #          file: ./Dockerfile
  #          push: false
  #          tags: ${{ secrets.DOCKERHUB_USERNAME }}/docker-node-cache-test
  #          cache-from: type=local,src=/tmp/.buildx-cache
  #          cache-to: type=local,dest=/tmp/.buildx-cache-new
  #
  #        # Temp fix
  #        # https://github.com/docker/build-push-action/issues/252
  #        # https://github.com/moby/buildkit/issues/1896
  #      - name: Move cache
  #        run: |
  #          rm -rf /tmp/.buildx-cache
  #          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  #
  #  with_new_local_cache_buildjet:
  #    name: Docker with BuildJet Cache on BuildJet runner
  #    runs-on: buildjet-2vcpu-ubuntu-2204
  #    steps:
  #      - name: Checkout
  #        uses: actions/checkout@v3
  #      - name: Login to Docker Hub
  #        uses: docker/login-action@v2
  #        with:
  #          username: ${{ secrets.DOCKERHUB_USERNAME }}
  #          password: ${{ secrets.DOCKERHUB_TOKEN }}
  #      - name: Set up Docker Buildx
  #        uses: docker/setup-buildx-action@v2
  #
  #      - name: Cache Docker Buildx layers
  #        uses: buildjet/cache@main
  #        with:
  #          path: /tmp/.buildx-cache
  #          # Key is named differently to avoid collision
  #          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
  #          restore-keys: |
  #            ${{ runner.os }}-buildx
  #        env:
  #          PARALLEL_DOWNLOAD: 'true'
  #
  #      - name: Build and push docker image
  #        uses: docker/build-push-action@v4
  #        with:
  #          context: .
  #          file: ./Dockerfile
  #          push: false
  #          tags: ${{ secrets.DOCKERHUB_USERNAME }}/docker-node-cache-test
  #          cache-from: type=local,src=/tmp/.buildx-cache
  #          cache-to: type=local,dest=/tmp/.buildx-cache-new
  #
  #        # Temp fix
  #        # https://github.com/docker/build-push-action/issues/252
  #        # https://github.com/moby/buildkit/issues/1896
  #      - name: Move cache
  #        run: |
  #          rm -rf /tmp/.buildx-cache
  #          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  gh_cache_on_buildjet:
    name: GitHub Cache on BuildJet runner
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache download
        id: cache-download-restore
        uses: actions/cache@v3
        with:
          path: /home/runner/debian
          key: ${{ runner.os }}-raspian-multiples

      - name: Download file
        if: steps.cache-download-restore.outputs.cache-hit != 'true'
        run: |
          mkdir -p /home/runner/debian
          curl https://downloads.raspberrypi.org/raspios_full_armhf/images/raspios_full_armhf-2023-05-03/2023-05-03-raspios-bullseye-armhf-full.img.xz -o /home/runner/debian/raspian1.img.xz && ls -la /home/runner/debian
          curl https://downloads.raspberrypi.org/raspios_full_armhf/images/raspios_full_armhf-2023-05-03/2023-05-03-raspios-bullseye-armhf-full.img.xz -o /home/runner/debian/raspian2.img.xz && ls -la /home/runner/debianraw_download_cache_buildjet:

  buildjet_cache_on_buildjet:
    name: BuildJet Cache on BuildJet runner
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache download
        id: cache-download-restore
        uses: buildjet/cache@v3
        with:
          path: /home/runner/debian
          key: ${{ runner.os }}-raspian-multiples

      - name: Download file
        if: steps.cache-download-restore.outputs.cache-hit != 'true'
        run: |
          mkdir -p /home/runner/debian
          curl https://downloads.raspberrypi.org/raspios_full_armhf/images/raspios_full_armhf-2023-05-03/2023-05-03-raspios-bullseye-armhf-full.img.xz -o /home/runner/debian/raspian1.img.xz && ls -la /home/runner/debian
          curl https://downloads.raspberrypi.org/raspios_full_armhf/images/raspios_full_armhf-2023-05-03/2023-05-03-raspios-bullseye-armhf-full.img.xz -o /home/runner/debian/raspian2.img.xz && ls -la /home/runner/debian